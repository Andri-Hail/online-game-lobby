{"id":"../node_modules/html-react-parser/index.js","dependencies":[{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\package.json","includedInParent":true,"mtime":1619739455508},{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\html-react-parser\\package.json","includedInParent":true,"mtime":1619732185425},{"name":"./lib/dom-to-react","loc":{"line":1,"column":25},"parent":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\html-react-parser\\index.js","resolved":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\html-react-parser\\lib\\dom-to-react.js"},{"name":"html-dom-parser","loc":{"line":2,"column":24},"parent":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\html-react-parser\\index.js","resolved":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\html-dom-parser\\lib\\html-to-dom-client.js"}],"generated":{"js":"var domToReact = require('./lib/dom-to-react');\nvar htmlToDOM = require('html-dom-parser');\n\n// decode HTML entities by default for `htmlparser2`\nvar domParserOptions = { decodeEntities: true, lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - The HTML string to parse to React.\n * @param  {Object}   [options]               - The parser options.\n * @param  {Function} [options.replace]       - The replace method.\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  return domToReact(htmlToDOM(html, domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/html-react-parser/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/html-react-parser/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"../node_modules/html-react-parser/index.js":"var domToReact = require('./lib/dom-to-react');\nvar htmlToDOM = require('html-dom-parser');\n\n// decode HTML entities by default for `htmlparser2`\nvar domParserOptions = { decodeEntities: true, lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - The HTML string to parse to React.\n * @param  {Object}   [options]               - The parser options.\n * @param  {Function} [options.replace]       - The replace method.\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  return domToReact(htmlToDOM(html, domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;\n"},"lineCount":28}},"error":null,"hash":"5470349c80b018ab2ae0071e3eed73af","cacheData":{"env":{}}}