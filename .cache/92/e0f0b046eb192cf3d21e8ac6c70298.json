{"id":"../node_modules/blueimp-load-image/js/load-image-iptc.js","dependencies":[{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\package.json","includedInParent":true,"mtime":1619739455508},{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\package.json","includedInParent":true,"mtime":1619732184965},{"name":"./load-image","loc":{"line":21,"column":20},"parent":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image-iptc.js","resolved":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image.js"},{"name":"./load-image-meta","loc":{"line":21,"column":45},"parent":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image-iptc.js","resolved":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image-meta.js"}],"generated":{"js":"var define;\n/*\n * JavaScript Load Image IPTC Parser\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * Copyright 2018, Dave Bevan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, DataView */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  /**\n   * IPTC tag map\n   *\n   * @name IptcMap\n   * @class\n   */\n  function IptcMap() {}\n\n  IptcMap.prototype.map = {\n    ObjectName: 5\n  }\n\n  IptcMap.prototype.types = {\n    0: 'Uint16', // ApplicationRecordVersion\n    200: 'Uint16', // ObjectPreviewFileFormat\n    201: 'Uint16', // ObjectPreviewFileVersion\n    202: 'binary' // ObjectPreviewData\n  }\n\n  /**\n   * Retrieves IPTC tag value\n   *\n   * @param {number|string} id IPTC tag code or name\n   * @returns {object} IPTC tag value\n   */\n  IptcMap.prototype.get = function (id) {\n    return this[id] || this[this.map[id]]\n  }\n\n  /**\n   * Retrieves string for the given DataView and range\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Offset start\n   * @param {number} length Offset length\n   * @returns {string} String value\n   */\n  function getStringValue(dataView, offset, length) {\n    var outstr = ''\n    var end = offset + length\n    for (var n = offset; n < end; n += 1) {\n      outstr += String.fromCharCode(dataView.getUint8(n))\n    }\n    return outstr\n  }\n\n  /**\n   * Retrieves tag value for the given DataView and range\n   *\n   * @param {number} tagCode tag code\n   * @param {IptcMap} map IPTC tag map\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Range start\n   * @param {number} length Range length\n   * @returns {object} Tag value\n   */\n  function getTagValue(tagCode, map, dataView, offset, length) {\n    if (map.types[tagCode] === 'binary') {\n      return new Blob([dataView.buffer.slice(offset, offset + length)])\n    }\n    if (map.types[tagCode] === 'Uint16') {\n      return dataView.getUint16(offset)\n    }\n    return getStringValue(dataView, offset, length)\n  }\n\n  /**\n   * Combines IPTC value with existing ones.\n   *\n   * @param {object} value Existing IPTC field value\n   * @param {object} newValue New IPTC field value\n   * @returns {object} Resulting IPTC field value\n   */\n  function combineTagValues(value, newValue) {\n    if (value === undefined) return newValue\n    if (value instanceof Array) {\n      value.push(newValue)\n      return value\n    }\n    return [value, newValue]\n  }\n\n  /**\n   * Parses IPTC tags.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} segmentOffset Segment offset\n   * @param {number} segmentLength Segment length\n   * @param {object} data Data export object\n   * @param {object} includeTags Map of tags to include\n   * @param {object} excludeTags Map of tags to exclude\n   */\n  function parseIptcTags(\n    dataView,\n    segmentOffset,\n    segmentLength,\n    data,\n    includeTags,\n    excludeTags\n  ) {\n    var value, tagSize, tagCode\n    var segmentEnd = segmentOffset + segmentLength\n    var offset = segmentOffset\n    while (offset < segmentEnd) {\n      if (\n        dataView.getUint8(offset) === 0x1c && // tag marker\n        dataView.getUint8(offset + 1) === 0x02 // record number, only handles v2\n      ) {\n        tagCode = dataView.getUint8(offset + 2)\n        if (\n          (!includeTags || includeTags[tagCode]) &&\n          (!excludeTags || !excludeTags[tagCode])\n        ) {\n          tagSize = dataView.getInt16(offset + 3)\n          value = getTagValue(tagCode, data.iptc, dataView, offset + 5, tagSize)\n          data.iptc[tagCode] = combineTagValues(data.iptc[tagCode], value)\n          if (data.iptcOffsets) {\n            data.iptcOffsets[tagCode] = offset\n          }\n        }\n      }\n      offset += 1\n    }\n  }\n\n  /**\n   * Tests if field segment starts at offset.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Segment offset\n   * @returns {boolean} True if '8BIM<EOT><EOT>' exists at offset\n   */\n  function isSegmentStart(dataView, offset) {\n    return (\n      dataView.getUint32(offset) === 0x3842494d && // Photoshop segment start\n      dataView.getUint16(offset + 4) === 0x0404 // IPTC segment start\n    )\n  }\n\n  /**\n   * Returns header length.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Segment offset\n   * @returns {number} Header length\n   */\n  function getHeaderLength(dataView, offset) {\n    var length = dataView.getUint8(offset + 7)\n    if (length % 2 !== 0) length += 1\n    // Check for pre photoshop 6 format\n    if (length === 0) {\n      // Always 4\n      length = 4\n    }\n    return length\n  }\n\n  loadImage.parseIptcData = function (dataView, offset, length, data, options) {\n    if (options.disableIptc) {\n      return\n    }\n    var markerLength = offset + length\n    while (offset + 8 < markerLength) {\n      if (isSegmentStart(dataView, offset)) {\n        var headerLength = getHeaderLength(dataView, offset)\n        var segmentOffset = offset + 8 + headerLength\n        if (segmentOffset > markerLength) {\n          // eslint-disable-next-line no-console\n          console.log('Invalid IPTC data: Invalid segment offset.')\n          break\n        }\n        var segmentLength = dataView.getUint16(offset + 6 + headerLength)\n        if (offset + segmentLength > markerLength) {\n          // eslint-disable-next-line no-console\n          console.log('Invalid IPTC data: Invalid segment size.')\n          break\n        }\n        // Create the iptc object to store the tags:\n        data.iptc = new IptcMap()\n        if (!options.disableIptcOffsets) {\n          data.iptcOffsets = new IptcMap()\n        }\n        parseIptcTags(\n          dataView,\n          segmentOffset,\n          segmentLength,\n          data,\n          options.includeIptcTags,\n          options.excludeIptcTags || { 202: true } // ObjectPreviewData\n        )\n        return\n      }\n      // eslint-disable-next-line no-param-reassign\n      offset += 1\n    }\n  }\n\n  // Registers this IPTC parser for the APP13 JPEG metadata segment:\n  loadImage.metaDataParsers.jpeg[0xffed].push(loadImage.parseIptcData)\n\n  loadImage.IptcMap = IptcMap\n\n  // Adds the following properties to the parseMetaData callback data:\n  // - iptc: The iptc tags, parsed by the parseIptcData method\n\n  // Adds the following options to the parseMetaData method:\n  // - disableIptc: Disables IPTC parsing when true.\n  // - disableIptcOffsets: Disables storing IPTC tag offsets when true.\n  // - includeIptcTags: A map of IPTC tags to include for parsing.\n  // - excludeIptcTags: A map of IPTC tags to exclude from parsing.\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}}],"sources":{"../node_modules/blueimp-load-image/js/load-image-iptc.js":"/*\n * JavaScript Load Image IPTC Parser\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * Copyright 2018, Dave Bevan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, DataView */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  /**\n   * IPTC tag map\n   *\n   * @name IptcMap\n   * @class\n   */\n  function IptcMap() {}\n\n  IptcMap.prototype.map = {\n    ObjectName: 5\n  }\n\n  IptcMap.prototype.types = {\n    0: 'Uint16', // ApplicationRecordVersion\n    200: 'Uint16', // ObjectPreviewFileFormat\n    201: 'Uint16', // ObjectPreviewFileVersion\n    202: 'binary' // ObjectPreviewData\n  }\n\n  /**\n   * Retrieves IPTC tag value\n   *\n   * @param {number|string} id IPTC tag code or name\n   * @returns {object} IPTC tag value\n   */\n  IptcMap.prototype.get = function (id) {\n    return this[id] || this[this.map[id]]\n  }\n\n  /**\n   * Retrieves string for the given DataView and range\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Offset start\n   * @param {number} length Offset length\n   * @returns {string} String value\n   */\n  function getStringValue(dataView, offset, length) {\n    var outstr = ''\n    var end = offset + length\n    for (var n = offset; n < end; n += 1) {\n      outstr += String.fromCharCode(dataView.getUint8(n))\n    }\n    return outstr\n  }\n\n  /**\n   * Retrieves tag value for the given DataView and range\n   *\n   * @param {number} tagCode tag code\n   * @param {IptcMap} map IPTC tag map\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Range start\n   * @param {number} length Range length\n   * @returns {object} Tag value\n   */\n  function getTagValue(tagCode, map, dataView, offset, length) {\n    if (map.types[tagCode] === 'binary') {\n      return new Blob([dataView.buffer.slice(offset, offset + length)])\n    }\n    if (map.types[tagCode] === 'Uint16') {\n      return dataView.getUint16(offset)\n    }\n    return getStringValue(dataView, offset, length)\n  }\n\n  /**\n   * Combines IPTC value with existing ones.\n   *\n   * @param {object} value Existing IPTC field value\n   * @param {object} newValue New IPTC field value\n   * @returns {object} Resulting IPTC field value\n   */\n  function combineTagValues(value, newValue) {\n    if (value === undefined) return newValue\n    if (value instanceof Array) {\n      value.push(newValue)\n      return value\n    }\n    return [value, newValue]\n  }\n\n  /**\n   * Parses IPTC tags.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} segmentOffset Segment offset\n   * @param {number} segmentLength Segment length\n   * @param {object} data Data export object\n   * @param {object} includeTags Map of tags to include\n   * @param {object} excludeTags Map of tags to exclude\n   */\n  function parseIptcTags(\n    dataView,\n    segmentOffset,\n    segmentLength,\n    data,\n    includeTags,\n    excludeTags\n  ) {\n    var value, tagSize, tagCode\n    var segmentEnd = segmentOffset + segmentLength\n    var offset = segmentOffset\n    while (offset < segmentEnd) {\n      if (\n        dataView.getUint8(offset) === 0x1c && // tag marker\n        dataView.getUint8(offset + 1) === 0x02 // record number, only handles v2\n      ) {\n        tagCode = dataView.getUint8(offset + 2)\n        if (\n          (!includeTags || includeTags[tagCode]) &&\n          (!excludeTags || !excludeTags[tagCode])\n        ) {\n          tagSize = dataView.getInt16(offset + 3)\n          value = getTagValue(tagCode, data.iptc, dataView, offset + 5, tagSize)\n          data.iptc[tagCode] = combineTagValues(data.iptc[tagCode], value)\n          if (data.iptcOffsets) {\n            data.iptcOffsets[tagCode] = offset\n          }\n        }\n      }\n      offset += 1\n    }\n  }\n\n  /**\n   * Tests if field segment starts at offset.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Segment offset\n   * @returns {boolean} True if '8BIM<EOT><EOT>' exists at offset\n   */\n  function isSegmentStart(dataView, offset) {\n    return (\n      dataView.getUint32(offset) === 0x3842494d && // Photoshop segment start\n      dataView.getUint16(offset + 4) === 0x0404 // IPTC segment start\n    )\n  }\n\n  /**\n   * Returns header length.\n   *\n   * @param {DataView} dataView Data view interface\n   * @param {number} offset Segment offset\n   * @returns {number} Header length\n   */\n  function getHeaderLength(dataView, offset) {\n    var length = dataView.getUint8(offset + 7)\n    if (length % 2 !== 0) length += 1\n    // Check for pre photoshop 6 format\n    if (length === 0) {\n      // Always 4\n      length = 4\n    }\n    return length\n  }\n\n  loadImage.parseIptcData = function (dataView, offset, length, data, options) {\n    if (options.disableIptc) {\n      return\n    }\n    var markerLength = offset + length\n    while (offset + 8 < markerLength) {\n      if (isSegmentStart(dataView, offset)) {\n        var headerLength = getHeaderLength(dataView, offset)\n        var segmentOffset = offset + 8 + headerLength\n        if (segmentOffset > markerLength) {\n          // eslint-disable-next-line no-console\n          console.log('Invalid IPTC data: Invalid segment offset.')\n          break\n        }\n        var segmentLength = dataView.getUint16(offset + 6 + headerLength)\n        if (offset + segmentLength > markerLength) {\n          // eslint-disable-next-line no-console\n          console.log('Invalid IPTC data: Invalid segment size.')\n          break\n        }\n        // Create the iptc object to store the tags:\n        data.iptc = new IptcMap()\n        if (!options.disableIptcOffsets) {\n          data.iptcOffsets = new IptcMap()\n        }\n        parseIptcTags(\n          dataView,\n          segmentOffset,\n          segmentLength,\n          data,\n          options.includeIptcTags,\n          options.excludeIptcTags || { 202: true } // ObjectPreviewData\n        )\n        return\n      }\n      // eslint-disable-next-line no-param-reassign\n      offset += 1\n    }\n  }\n\n  // Registers this IPTC parser for the APP13 JPEG metadata segment:\n  loadImage.metaDataParsers.jpeg[0xffed].push(loadImage.parseIptcData)\n\n  loadImage.IptcMap = IptcMap\n\n  // Adds the following properties to the parseMetaData callback data:\n  // - iptc: The iptc tags, parsed by the parseIptcData method\n\n  // Adds the following options to the parseMetaData method:\n  // - disableIptc: Disables IPTC parsing when true.\n  // - disableIptcOffsets: Disables storing IPTC tag offsets when true.\n  // - includeIptcTags: A map of IPTC tags to include for parsing.\n  // - excludeIptcTags: A map of IPTC tags to exclude from parsing.\n})\n"},"lineCount":241}},"error":null,"hash":"f62d2317ea066a88c80c70f35268f183","cacheData":{"env":{}}}