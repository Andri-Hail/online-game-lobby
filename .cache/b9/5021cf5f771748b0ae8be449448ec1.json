{"id":"../node_modules/blueimp-load-image/js/load-image-meta.js","dependencies":[{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\package.json","includedInParent":true,"mtime":1619739455508},{"name":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\package.json","includedInParent":true,"mtime":1619732184965},{"name":"./load-image","loc":{"line":24,"column":20},"parent":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image-meta.js","resolved":"C:\\Users\\andri\\Desktop\\Github\\online-game-lobby\\node_modules\\blueimp-load-image\\js\\load-image.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\n/*\n * JavaScript Load Image Meta\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Image metadata handling implementation\n * based on the help and contribution of\n * Achim St√∂hr.\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, Promise, DataView, Uint8Array, ArrayBuffer */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var global = loadImage.global\n  var originalTransform = loadImage.transform\n\n  var blobSlice =\n    global.Blob &&\n    (Blob.prototype.slice ||\n      Blob.prototype.webkitSlice ||\n      Blob.prototype.mozSlice)\n\n  var bufferSlice =\n    (global.ArrayBuffer && ArrayBuffer.prototype.slice) ||\n    function (begin, end) {\n      // Polyfill for IE10, which does not support ArrayBuffer.slice\n      // eslint-disable-next-line no-param-reassign\n      end = end || this.byteLength - begin\n      var arr1 = new Uint8Array(this, begin, end)\n      var arr2 = new Uint8Array(end)\n      arr2.set(arr1)\n      return arr2.buffer\n    }\n\n  var metaDataParsers = {\n    jpeg: {\n      0xffe1: [], // APP1 marker\n      0xffed: [] // APP13 marker\n    }\n  }\n\n  /**\n   * Parses image metadata and calls the callback with an object argument\n   * with the following property:\n   * - imageHead: The complete image head as ArrayBuffer\n   * The options argument accepts an object and supports the following\n   * properties:\n   * - maxMetaDataSize: Defines the maximum number of bytes to parse.\n   * - disableImageHead: Disables creating the imageHead property.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} [callback] Callback function\n   * @param {object} [options] Parsing options\n   * @param {object} [data] Result data object\n   * @returns {Promise<object>|undefined} Returns Promise if no callback given.\n   */\n  function parseMetaData(file, callback, options, data) {\n    var that = this\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {undefined} Undefined\n     */\n    function executor(resolve, reject) {\n      if (\n        !(\n          global.DataView &&\n          blobSlice &&\n          file &&\n          file.size >= 12 &&\n          file.type === 'image/jpeg'\n        )\n      ) {\n        // Nothing to parse\n        return resolve(data)\n      }\n      // 256 KiB should contain all EXIF/ICC/IPTC segments:\n      var maxMetaDataSize = options.maxMetaDataSize || 262144\n      if (\n        !loadImage.readFile(\n          blobSlice.call(file, 0, maxMetaDataSize),\n          function (buffer) {\n            // Note on endianness:\n            // Since the marker and length bytes in JPEG files are always\n            // stored in big endian order, we can leave the endian parameter\n            // of the DataView methods undefined, defaulting to big endian.\n            var dataView = new DataView(buffer)\n            // Check for the JPEG marker (0xffd8):\n            if (dataView.getUint16(0) !== 0xffd8) {\n              return reject(\n                new Error('Invalid JPEG file: Missing JPEG marker.')\n              )\n            }\n            var offset = 2\n            var maxOffset = dataView.byteLength - 4\n            var headLength = offset\n            var markerBytes\n            var markerLength\n            var parsers\n            var i\n            while (offset < maxOffset) {\n              markerBytes = dataView.getUint16(offset)\n              // Search for APPn (0xffeN) and COM (0xfffe) markers,\n              // which contain application-specific metadata like\n              // Exif, ICC and IPTC data and text comments:\n              if (\n                (markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\n                markerBytes === 0xfffe\n              ) {\n                // The marker bytes (2) are always followed by\n                // the length bytes (2), indicating the length of the\n                // marker segment, which includes the length bytes,\n                // but not the marker bytes, so we add 2:\n                markerLength = dataView.getUint16(offset + 2) + 2\n                if (offset + markerLength > dataView.byteLength) {\n                  // eslint-disable-next-line no-console\n                  console.log('Invalid JPEG metadata: Invalid segment size.')\n                  break\n                }\n                parsers = metaDataParsers.jpeg[markerBytes]\n                if (parsers && !options.disableMetaDataParsers) {\n                  for (i = 0; i < parsers.length; i += 1) {\n                    parsers[i].call(\n                      that,\n                      dataView,\n                      offset,\n                      markerLength,\n                      data,\n                      options\n                    )\n                  }\n                }\n                offset += markerLength\n                headLength = offset\n              } else {\n                // Not an APPn or COM marker, probably safe to\n                // assume that this is the end of the metadata\n                break\n              }\n            }\n            // Meta length must be longer than JPEG marker (2)\n            // plus APPn marker (2), followed by length bytes (2):\n            if (!options.disableImageHead && headLength > 6) {\n              data.imageHead = bufferSlice.call(buffer, 0, headLength)\n            }\n            resolve(data)\n          },\n          reject,\n          'readAsArrayBuffer'\n        )\n      ) {\n        // No support for the FileReader interface, nothing to parse\n        resolve(data)\n      }\n    }\n    options = options || {} // eslint-disable-line no-param-reassign\n    if (global.Promise && typeof callback !== 'function') {\n      options = callback || {} // eslint-disable-line no-param-reassign\n      data = options // eslint-disable-line no-param-reassign\n      return new Promise(executor)\n    }\n    data = data || {} // eslint-disable-line no-param-reassign\n    return executor(callback, callback)\n  }\n\n  /**\n   * Replaces the head of a JPEG Blob\n   *\n   * @param {Blob} blob Blob object\n   * @param {ArrayBuffer} oldHead Old JPEG head\n   * @param {ArrayBuffer} newHead New JPEG head\n   * @returns {Blob} Combined Blob\n   */\n  function replaceJPEGHead(blob, oldHead, newHead) {\n    if (!blob || !oldHead || !newHead) return null\n    return new Blob([newHead, blobSlice.call(blob, oldHead.byteLength)], {\n      type: 'image/jpeg'\n    })\n  }\n\n  /**\n   * Replaces the image head of a JPEG blob with the given one.\n   * Returns a Promise or calls the callback with the new Blob.\n   *\n   * @param {Blob} blob Blob object\n   * @param {ArrayBuffer} head New JPEG head\n   * @param {Function} [callback] Callback function\n   * @returns {Promise<Blob|null>|undefined} Combined Blob\n   */\n  function replaceHead(blob, head, callback) {\n    var options = { maxMetaDataSize: 256, disableMetaDataParsers: true }\n    if (!callback && global.Promise) {\n      return parseMetaData(blob, options).then(function (data) {\n        return replaceJPEGHead(blob, data.imageHead, head)\n      })\n    }\n    parseMetaData(\n      blob,\n      function (data) {\n        callback(replaceJPEGHead(blob, data.imageHead, head))\n      },\n      options\n    )\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    if (loadImage.requiresMetaData(options)) {\n      data = data || {} // eslint-disable-line no-param-reassign\n      parseMetaData(\n        file,\n        function (result) {\n          if (result !== data) {\n            // eslint-disable-next-line no-console\n            if (global.console) console.log(result)\n            result = data // eslint-disable-line no-param-reassign\n          }\n          originalTransform.call(\n            loadImage,\n            img,\n            options,\n            callback,\n            file,\n            result\n          )\n        },\n        options,\n        data\n      )\n    } else {\n      originalTransform.apply(loadImage, arguments)\n    }\n  }\n\n  loadImage.blobSlice = blobSlice\n  loadImage.bufferSlice = bufferSlice\n  loadImage.replaceHead = replaceHead\n  loadImage.parseMetaData = parseMetaData\n  loadImage.metaDataParsers = metaDataParsers\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}}],"sources":{"../node_modules/blueimp-load-image/js/load-image-meta.js":"/*\n * JavaScript Load Image Meta\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Image metadata handling implementation\n * based on the help and contribution of\n * Achim St√∂hr.\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require, Promise, DataView, Uint8Array, ArrayBuffer */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var global = loadImage.global\n  var originalTransform = loadImage.transform\n\n  var blobSlice =\n    global.Blob &&\n    (Blob.prototype.slice ||\n      Blob.prototype.webkitSlice ||\n      Blob.prototype.mozSlice)\n\n  var bufferSlice =\n    (global.ArrayBuffer && ArrayBuffer.prototype.slice) ||\n    function (begin, end) {\n      // Polyfill for IE10, which does not support ArrayBuffer.slice\n      // eslint-disable-next-line no-param-reassign\n      end = end || this.byteLength - begin\n      var arr1 = new Uint8Array(this, begin, end)\n      var arr2 = new Uint8Array(end)\n      arr2.set(arr1)\n      return arr2.buffer\n    }\n\n  var metaDataParsers = {\n    jpeg: {\n      0xffe1: [], // APP1 marker\n      0xffed: [] // APP13 marker\n    }\n  }\n\n  /**\n   * Parses image metadata and calls the callback with an object argument\n   * with the following property:\n   * - imageHead: The complete image head as ArrayBuffer\n   * The options argument accepts an object and supports the following\n   * properties:\n   * - maxMetaDataSize: Defines the maximum number of bytes to parse.\n   * - disableImageHead: Disables creating the imageHead property.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} [callback] Callback function\n   * @param {object} [options] Parsing options\n   * @param {object} [data] Result data object\n   * @returns {Promise<object>|undefined} Returns Promise if no callback given.\n   */\n  function parseMetaData(file, callback, options, data) {\n    var that = this\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {undefined} Undefined\n     */\n    function executor(resolve, reject) {\n      if (\n        !(\n          global.DataView &&\n          blobSlice &&\n          file &&\n          file.size >= 12 &&\n          file.type === 'image/jpeg'\n        )\n      ) {\n        // Nothing to parse\n        return resolve(data)\n      }\n      // 256 KiB should contain all EXIF/ICC/IPTC segments:\n      var maxMetaDataSize = options.maxMetaDataSize || 262144\n      if (\n        !loadImage.readFile(\n          blobSlice.call(file, 0, maxMetaDataSize),\n          function (buffer) {\n            // Note on endianness:\n            // Since the marker and length bytes in JPEG files are always\n            // stored in big endian order, we can leave the endian parameter\n            // of the DataView methods undefined, defaulting to big endian.\n            var dataView = new DataView(buffer)\n            // Check for the JPEG marker (0xffd8):\n            if (dataView.getUint16(0) !== 0xffd8) {\n              return reject(\n                new Error('Invalid JPEG file: Missing JPEG marker.')\n              )\n            }\n            var offset = 2\n            var maxOffset = dataView.byteLength - 4\n            var headLength = offset\n            var markerBytes\n            var markerLength\n            var parsers\n            var i\n            while (offset < maxOffset) {\n              markerBytes = dataView.getUint16(offset)\n              // Search for APPn (0xffeN) and COM (0xfffe) markers,\n              // which contain application-specific metadata like\n              // Exif, ICC and IPTC data and text comments:\n              if (\n                (markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\n                markerBytes === 0xfffe\n              ) {\n                // The marker bytes (2) are always followed by\n                // the length bytes (2), indicating the length of the\n                // marker segment, which includes the length bytes,\n                // but not the marker bytes, so we add 2:\n                markerLength = dataView.getUint16(offset + 2) + 2\n                if (offset + markerLength > dataView.byteLength) {\n                  // eslint-disable-next-line no-console\n                  console.log('Invalid JPEG metadata: Invalid segment size.')\n                  break\n                }\n                parsers = metaDataParsers.jpeg[markerBytes]\n                if (parsers && !options.disableMetaDataParsers) {\n                  for (i = 0; i < parsers.length; i += 1) {\n                    parsers[i].call(\n                      that,\n                      dataView,\n                      offset,\n                      markerLength,\n                      data,\n                      options\n                    )\n                  }\n                }\n                offset += markerLength\n                headLength = offset\n              } else {\n                // Not an APPn or COM marker, probably safe to\n                // assume that this is the end of the metadata\n                break\n              }\n            }\n            // Meta length must be longer than JPEG marker (2)\n            // plus APPn marker (2), followed by length bytes (2):\n            if (!options.disableImageHead && headLength > 6) {\n              data.imageHead = bufferSlice.call(buffer, 0, headLength)\n            }\n            resolve(data)\n          },\n          reject,\n          'readAsArrayBuffer'\n        )\n      ) {\n        // No support for the FileReader interface, nothing to parse\n        resolve(data)\n      }\n    }\n    options = options || {} // eslint-disable-line no-param-reassign\n    if (global.Promise && typeof callback !== 'function') {\n      options = callback || {} // eslint-disable-line no-param-reassign\n      data = options // eslint-disable-line no-param-reassign\n      return new Promise(executor)\n    }\n    data = data || {} // eslint-disable-line no-param-reassign\n    return executor(callback, callback)\n  }\n\n  /**\n   * Replaces the head of a JPEG Blob\n   *\n   * @param {Blob} blob Blob object\n   * @param {ArrayBuffer} oldHead Old JPEG head\n   * @param {ArrayBuffer} newHead New JPEG head\n   * @returns {Blob} Combined Blob\n   */\n  function replaceJPEGHead(blob, oldHead, newHead) {\n    if (!blob || !oldHead || !newHead) return null\n    return new Blob([newHead, blobSlice.call(blob, oldHead.byteLength)], {\n      type: 'image/jpeg'\n    })\n  }\n\n  /**\n   * Replaces the image head of a JPEG blob with the given one.\n   * Returns a Promise or calls the callback with the new Blob.\n   *\n   * @param {Blob} blob Blob object\n   * @param {ArrayBuffer} head New JPEG head\n   * @param {Function} [callback] Callback function\n   * @returns {Promise<Blob|null>|undefined} Combined Blob\n   */\n  function replaceHead(blob, head, callback) {\n    var options = { maxMetaDataSize: 256, disableMetaDataParsers: true }\n    if (!callback && global.Promise) {\n      return parseMetaData(blob, options).then(function (data) {\n        return replaceJPEGHead(blob, data.imageHead, head)\n      })\n    }\n    parseMetaData(\n      blob,\n      function (data) {\n        callback(replaceJPEGHead(blob, data.imageHead, head))\n      },\n      options\n    )\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    if (loadImage.requiresMetaData(options)) {\n      data = data || {} // eslint-disable-line no-param-reassign\n      parseMetaData(\n        file,\n        function (result) {\n          if (result !== data) {\n            // eslint-disable-next-line no-console\n            if (global.console) console.log(result)\n            result = data // eslint-disable-line no-param-reassign\n          }\n          originalTransform.call(\n            loadImage,\n            img,\n            options,\n            callback,\n            file,\n            result\n          )\n        },\n        options,\n        data\n      )\n    } else {\n      originalTransform.apply(loadImage, arguments)\n    }\n  }\n\n  loadImage.blobSlice = blobSlice\n  loadImage.bufferSlice = bufferSlice\n  loadImage.replaceHead = replaceHead\n  loadImage.parseMetaData = parseMetaData\n  loadImage.metaDataParsers = metaDataParsers\n})\n"},"lineCount":262}},"error":null,"hash":"9c22e9179074f80ac5295388319563d3","cacheData":{"env":{}}}