"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageInputSmall = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context = require("../context");

var _ChatAutoComplete = require("./ChatAutoComplete");

var _emojiMart = require("emoji-mart");

var _reactFileUtils = require("react-file-utils");

var _utils = require("../utils");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var MessageInputSmall = function (_PureComponent) {
  (0, _inherits2.default)(MessageInputSmall, _PureComponent);

  var _super = _createSuper(MessageInputSmall);

  function MessageInputSmall() {
    var _this;

    (0, _classCallCheck2.default)(this, MessageInputSmall);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderUploads", function () {
      return _react.default.createElement(_react.default.Fragment, null, _this.props.imageOrder.length > 0 && _react.default.createElement(_reactFileUtils.ImagePreviewer, {
        imageUploads: _this.props.imageOrder.map(function (id) {
          return _this.props.imageUploads[id];
        }),
        handleRemove: _this.props.removeImage,
        handleRetry: _this.props.uploadImage,
        handleFiles: _this.props.uploadNewFiles,
        multiple: _this.props.multipleUploads,
        disabled: _this.props.numberOfUploads >= _this.props.maxNumberOfFiles ? true : false
      }), _this.props.fileOrder.length > 0 && _react.default.createElement(_reactFileUtils.FilePreviewer, {
        uploads: _this.props.fileOrder.map(function (id) {
          return _this.props.fileUploads[id];
        }),
        handleRemove: _this.props.removeFile,
        handleRetry: _this.props.uploadFile,
        handleFiles: _this.props.uploadNewFiles
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderEmojiPicker", function () {
      if (_this.props.emojiPickerIsOpen) {
        return _react.default.createElement("div", {
          className: "str-chat__small-message-input-emojipicker",
          ref: _this.props.emojiPickerRef
        }, _react.default.createElement(_emojiMart.Picker, {
          native: true,
          emoji: "point_up",
          title: "Pick your emoji\u2026",
          onSelect: _this.props.onSelectEmoji,
          color: "#006CFF",
          showPreview: false,
          emojisToShowFilter: _utils.filterEmoji
        }));
      }
    });
    return _this;
  }

  (0, _createClass2.default)(MessageInputSmall, [{
    key: "render",
    value: function render() {
      var t = this.props.t;
      var SendButton = this.props.SendButton;
      return _react.default.createElement("div", {
        className: "str-chat__small-message-input__wrapper"
      }, _react.default.createElement(_reactFileUtils.ImageDropzone, {
        accept: this.props.acceptedFiles,
        multiple: this.props.multipleUploads,
        disabled: this.props.numberOfUploads >= this.props.maxNumberOfFiles ? true : false,
        handleFiles: this.props.uploadNewFiles
      }, _react.default.createElement("div", {
        className: "str-chat__small-message-input ".concat(SendButton ? 'str-chat__small-message-input--send-button-active' : null)
      }, this.renderUploads(), this.renderEmojiPicker(), _react.default.createElement("div", {
        className: "str-chat__small-message-input--textarea-wrapper"
      }, _react.default.createElement(_ChatAutoComplete.ChatAutoComplete, {
        users: this.props.getUsers(),
        commands: this.props.getCommands(),
        innerRef: this.props.textareaRef,
        handleSubmit: this.props.handleSubmit,
        onChange: this.props.handleChange,
        value: this.props.text,
        rows: 1,
        maxRows: this.props.maxRows,
        onSelectItem: this.props.onSelectItem,
        placeholder: t('Type your message'),
        onPaste: this.props.onPaste,
        grow: this.props.grow,
        disabled: this.props.disabled,
        additionalTextareaProps: this.props.additionalTextareaProps
      }), _react.default.createElement("span", {
        className: "str-chat__small-message-input-emojiselect",
        onClick: this.props.openEmojiPicker
      }, _react.default.createElement("svg", {
        width: "14",
        height: "14",
        xmlns: "http://www.w3.org/2000/svg"
      }, _react.default.createElement("path", {
        d: "M11.108 8.05a.496.496 0 0 1 .212.667C10.581 10.147 8.886 11 7 11c-1.933 0-3.673-.882-4.33-2.302a.497.497 0 0 1 .9-.417C4.068 9.357 5.446 10 7 10c1.519 0 2.869-.633 3.44-1.738a.495.495 0 0 1 .668-.212zm.792-1.826a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.298 0-.431.168-.54.307A.534.534 0 0 1 9.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zm-7 0a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.299 0-.432.168-.54.307A.533.533 0 0 1 2.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zM7 0a7 7 0 1 1 0 14A7 7 0 0 1 7 0zm4.243 11.243A5.96 5.96 0 0 0 13 7a5.96 5.96 0 0 0-1.757-4.243A5.96 5.96 0 0 0 7 1a5.96 5.96 0 0 0-4.243 1.757A5.96 5.96 0 0 0 1 7a5.96 5.96 0 0 0 1.757 4.243A5.96 5.96 0 0 0 7 13a5.96 5.96 0 0 0 4.243-1.757z",
        fillRule: "evenodd"
      }))), _react.default.createElement(_reactFileUtils.FileUploadButton, {
        multiple: this.props.multipleUploads,
        disabled: this.props.numberOfUploads >= this.props.maxNumberOfFiles ? true : false,
        accepts: this.props.acceptedFiles,
        handleFiles: this.props.uploadNewFiles
      }, _react.default.createElement("span", {
        className: "str-chat__small-message-input-fileupload",
        onClick: this.props.openFilePanel
      }, _react.default.createElement("svg", {
        width: "14",
        height: "14",
        xmlns: "http://www.w3.org/2000/svg"
      }, _react.default.createElement("path", {
        d: "M7 .5c3.59 0 6.5 2.91 6.5 6.5s-2.91 6.5-6.5 6.5S.5 10.59.5 7 3.41.5 7 .5zm0 12c3.031 0 5.5-2.469 5.5-5.5S10.031 1.5 7 1.5A5.506 5.506 0 0 0 1.5 7c0 3.034 2.469 5.5 5.5 5.5zM7.506 3v3.494H11v1.05H7.506V11h-1.05V7.544H3v-1.05h3.456V3h1.05z",
        fillRule: "nonzero"
      })))), SendButton && _react.default.createElement(SendButton, {
        sendMessage: this.props.handleSubmit
      })))));
    }
  }]);
  return MessageInputSmall;
}(_react.PureComponent);

(0, _defineProperty2.default)(MessageInputSmall, "propTypes", {
  focus: _propTypes.default.bool.isRequired,
  grow: _propTypes.default.bool.isRequired,
  maxRows: _propTypes.default.number.isRequired,
  disabled: _propTypes.default.bool,
  imageOrder: _propTypes.default.array,
  imageUploads: _propTypes.default.object,
  removeImage: _propTypes.default.func,
  uploadImage: _propTypes.default.func,
  uploadNewFiles: _propTypes.default.func,
  numberOfUploads: _propTypes.default.number,
  fileOrder: _propTypes.default.array,
  fileUploads: _propTypes.default.object,
  removeFile: _propTypes.default.func,
  uploadFile: _propTypes.default.func,
  emojiPickerIsOpen: _propTypes.default.bool,
  emojiPickerRef: _propTypes.default.object,
  onSelectEmoji: _propTypes.default.func,
  getUsers: _propTypes.default.func,
  getCommands: _propTypes.default.func,
  textareaRef: _propTypes.default.object,
  handleSubmit: _propTypes.default.func,
  handleChange: _propTypes.default.func,
  onSelectItem: _propTypes.default.func,
  text: _propTypes.default.string,
  onPaste: _propTypes.default.func,
  openEmojiPicker: _propTypes.default.func,
  watcher_count: _propTypes.default.number,
  typing: _propTypes.default.object,
  multipleUploads: _propTypes.default.object,
  maxNumberOfFiles: _propTypes.default.number,
  acceptedFiles: _propTypes.default.object,
  SendButton: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  additionalTextareaProps: _propTypes.default.object
});
var MessageInputSmallWithContext = (0, _context.withTranslationContext)(MessageInputSmall);
exports.MessageInputSmall = MessageInputSmallWithContext;