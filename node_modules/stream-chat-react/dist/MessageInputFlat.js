"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageInputFlat = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context = require("../context");

var _ChatAutoComplete = require("./ChatAutoComplete");

var _reactFileUtils = require("react-file-utils");

var _utils = require("../utils");

var _emojiMart = require("emoji-mart");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var MessageInputFlat = function (_PureComponent) {
  (0, _inherits2.default)(MessageInputFlat, _PureComponent);

  var _super = _createSuper(MessageInputFlat);

  function MessageInputFlat() {
    var _this;

    (0, _classCallCheck2.default)(this, MessageInputFlat);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderUploads", function () {
      return _react.default.createElement(_react.default.Fragment, null, _this.props.imageOrder.length > 0 && _react.default.createElement(_reactFileUtils.ImagePreviewer, {
        imageUploads: _this.props.imageOrder.map(function (id) {
          return _this.props.imageUploads[id];
        }),
        handleRemove: _this.props.removeImage,
        handleRetry: _this.props.uploadImage,
        handleFiles: _this.props.uploadNewFiles,
        multiple: _this.props.multipleUploads,
        disabled: _this.props.numberOfUploads >= _this.props.maxNumberOfFiles
      }), _this.props.fileOrder.length > 0 && _react.default.createElement("div", {
        className: "str-chat__file-uploads"
      }, _react.default.createElement(_reactFileUtils.FilePreviewer, {
        uploads: _this.props.fileOrder.map(function (id) {
          return _this.props.fileUploads[id];
        }),
        handleRemove: _this.props.removeFile,
        handleRetry: _this.props.uploadFile,
        handleFiles: _this.props.uploadNewFiles
      })));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderEmojiPicker", function () {
      if (_this.props.emojiPickerIsOpen) {
        return _react.default.createElement("div", {
          className: "str-chat__input-flat--emojipicker",
          ref: _this.props.emojiPickerRef
        }, _react.default.createElement(_emojiMart.Picker, {
          native: true,
          emoji: "point_up",
          title: "Pick your emoji\u2026",
          onSelect: _this.props.onSelectEmoji,
          color: "#006CFF",
          showPreview: false,
          emojisToShowFilter: _utils.filterEmoji
        }));
      }
    });
    return _this;
  }

  (0, _createClass2.default)(MessageInputFlat, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var t = this.props.t;
      var SendButton = this.props.SendButton;
      return _react.default.createElement("div", {
        className: "str-chat__input-flat ".concat(SendButton ? 'str-chat__input-flat--send-button-active' : null)
      }, _react.default.createElement(_reactFileUtils.ImageDropzone, {
        accept: this.props.acceptedFiles,
        multiple: this.props.multipleUploads,
        disabled: this.props.numberOfUploads >= this.props.maxNumberOfFiles,
        handleFiles: this.props.uploadNewFiles
      }, _react.default.createElement("div", {
        className: "str-chat__input-flat-wrapper"
      }, this.renderUploads(), this.renderEmojiPicker(), _react.default.createElement("div", {
        className: "str-chat__input-flat--textarea-wrapper"
      }, _react.default.createElement(_ChatAutoComplete.ChatAutoComplete, {
        users: this.props.getUsers(),
        commands: this.props.getCommands(),
        innerRef: this.props.textareaRef,
        handleSubmit: function handleSubmit(e) {
          return _this2.props.handleSubmit(e);
        },
        onSelectItem: this.props.onSelectItem,
        onChange: this.props.handleChange,
        value: this.props.text,
        rows: 1,
        maxRows: this.props.maxRows,
        placeholder: t('Type your message'),
        onPaste: this.props.onPaste,
        grow: this.props.grow,
        onFocus: this.props.onFocus,
        disabled: this.props.disabled,
        additionalTextareaProps: this.props.additionalTextareaProps
      }), _react.default.createElement("span", {
        className: "str-chat__input-flat-emojiselect",
        onClick: this.props.openEmojiPicker
      }, _react.default.createElement("svg", {
        width: "28",
        height: "28",
        xmlns: "http://www.w3.org/2000/svg"
      }, _react.default.createElement("path", {
        d: "M22.217 16.1c.483.25.674.849.423 1.334C21.163 20.294 17.771 22 14 22c-3.867 0-7.347-1.765-8.66-4.605a.994.994 0 0 1 .9-1.407c.385 0 .739.225.9.575C8.135 18.715 10.892 20 14 20c3.038 0 5.738-1.267 6.879-3.476a.99.99 0 0 1 1.338-.424zm1.583-3.652c.341.443.235 1.064-.237 1.384a1.082 1.082 0 0 1-.62.168c-.338 0-.659-.132-.858-.389-.212-.276-.476-.611-1.076-.611-.598 0-.864.337-1.08.614-.197.254-.517.386-.854.386-.224 0-.438-.045-.62-.167-.517-.349-.578-.947-.235-1.388.66-.847 1.483-1.445 2.789-1.445 1.305 0 2.136.6 2.79 1.448zm-14 0c.341.443.235 1.064-.237 1.384a1.082 1.082 0 0 1-.62.168c-.339 0-.659-.132-.858-.389C7.873 13.335 7.61 13 7.01 13c-.598 0-.864.337-1.08.614-.197.254-.517.386-.854.386-.224 0-.438-.045-.62-.167-.518-.349-.579-.947-.235-1.388C4.88 11.598 5.703 11 7.01 11c1.305 0 2.136.6 2.79 1.448zM14 0c7.732 0 14 6.268 14 14s-6.268 14-14 14S0 21.732 0 14 6.268 0 14 0zm8.485 22.485A11.922 11.922 0 0 0 26 14c0-3.205-1.248-6.219-3.515-8.485A11.922 11.922 0 0 0 14 2a11.922 11.922 0 0 0-8.485 3.515A11.922 11.922 0 0 0 2 14c0 3.205 1.248 6.219 3.515 8.485A11.922 11.922 0 0 0 14 26c3.205 0 6.219-1.248 8.485-3.515z",
        fillRule: "evenodd"
      }))), _react.default.createElement(_reactFileUtils.FileUploadButton, {
        multiple: this.props.multipleUploads,
        disabled: this.props.numberOfUploads >= this.props.maxNumberOfFiles,
        accepts: this.props.acceptedFiles,
        handleFiles: this.props.uploadNewFiles
      }, _react.default.createElement("span", {
        className: "str-chat__input-flat-fileupload"
      }, _react.default.createElement("svg", {
        width: "14",
        height: "14",
        xmlns: "http://www.w3.org/2000/svg"
      }, _react.default.createElement("path", {
        d: "M1.667.333h10.666c.737 0 1.334.597 1.334 1.334v10.666c0 .737-.597 1.334-1.334 1.334H1.667a1.333 1.333 0 0 1-1.334-1.334V1.667C.333.93.93.333 1.667.333zm2 1.334a1.667 1.667 0 1 0 0 3.333 1.667 1.667 0 0 0 0-3.333zm-2 9.333v1.333h10.666v-4l-2-2-4 4-2-2L1.667 11z",
        fillRule: "nonzero"
      })))), SendButton && _react.default.createElement(SendButton, {
        sendMessage: this.props.handleSubmit
      })))));
    }
  }]);
  return MessageInputFlat;
}(_react.PureComponent);

(0, _defineProperty2.default)(MessageInputFlat, "propTypes", {
  focus: _propTypes.default.bool,
  grow: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  imageOrder: _propTypes.default.array,
  imageUploads: _propTypes.default.object,
  removeImage: _propTypes.default.func,
  uploadImage: _propTypes.default.func,
  uploadNewFiles: _propTypes.default.func,
  numberOfUploads: _propTypes.default.number,
  fileOrder: _propTypes.default.array,
  fileUploads: _propTypes.default.object,
  removeFile: _propTypes.default.func,
  uploadFile: _propTypes.default.func,
  emojiPickerIsOpen: _propTypes.default.bool,
  emojiPickerRef: _propTypes.default.object,
  onSelectEmoji: _propTypes.default.func,
  getUsers: _propTypes.default.func,
  getCommands: _propTypes.default.func,
  textareaRef: _propTypes.default.object,
  handleSubmit: _propTypes.default.func,
  handleChange: _propTypes.default.func,
  onSelectItem: _propTypes.default.func,
  text: _propTypes.default.string,
  onPaste: _propTypes.default.func,
  openEmojiPicker: _propTypes.default.func,
  watcher_count: _propTypes.default.number,
  typing: _propTypes.default.object,
  multipleUploads: _propTypes.default.object,
  maxNumberOfFiles: _propTypes.default.number,
  acceptedFiles: _propTypes.default.object,
  SendButton: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  additionalTextareaProps: _propTypes.default.object
});
(0, _defineProperty2.default)(MessageInputFlat, "defaultProps", {
  grow: true,
  disabled: false
});
var MessageInputFlatWithContext = (0, _context.withTranslationContext)(MessageInputFlat);
exports.MessageInputFlat = MessageInputFlatWithContext;