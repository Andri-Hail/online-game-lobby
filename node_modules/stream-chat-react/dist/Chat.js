"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chat = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context3 = require("../context");

var _Streami18n = require("../Streami18n");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Chat = function (_PureComponent) {
  (0, _inherits2.default)(Chat, _PureComponent);

  var _super = _createSuper(Chat);

  function Chat(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Chat);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setActiveChannel", function () {
      var _ref = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(channel) {
        var watchers,
            e,
            _args = arguments;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                watchers = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
                e = _args.length > 2 ? _args[2] : undefined;

                if (e !== undefined && e.preventDefault) {
                  e.preventDefault();
                }

                if (!Object.keys(watchers).length) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return channel.query({
                  watch: true,
                  watchers
                });

              case 6:
                _this.setState(function () {
                  return {
                    channel
                  };
                });

                if (_this.state.navOpen) {
                  _this.closeMobileNav();
                }

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "openMobileNav", function () {
      setTimeout(function () {
        _this.setState({
          navOpen: true
        });
      }, 100);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "closeMobileNav", function () {
      _this.setState({
        navOpen: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getContext", function () {
      return {
        client: _this.props.client,
        channel: _this.state.channel,
        setActiveChannel: _this.setActiveChannel,
        openMobileNav: _this.openMobileNav,
        closeMobileNav: _this.closeMobileNav,
        navOpen: _this.state.navOpen,
        theme: _this.props.theme
      };
    });
    _this.state = {
      channel: {},
      navOpen: true,
      error: false
    };
    return _this;
  }

  (0, _createClass2.default)(Chat, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {
        var _this2 = this;

        var i18nInstance, streami18n, _yield$streami18n$get, t, tDateTimeParser;

        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                i18nInstance = this.props.i18nInstance;

                if (i18nInstance && i18nInstance instanceof _Streami18n.Streami18n) {
                  streami18n = i18nInstance;
                } else {
                  streami18n = new _Streami18n.Streami18n({
                    language: 'en'
                  });
                }

                streami18n.registerSetLanguageCallback(function (t) {
                  _this2.setState({
                    t
                  });
                });
                _context2.next = 5;
                return streami18n.getTranslators();

              case 5:
                _yield$streami18n$get = _context2.sent;
                t = _yield$streami18n$get.t;
                tDateTimeParser = _yield$streami18n$get.tDateTimeParser;
                this.setState({
                  t,
                  tDateTimeParser
                });

              case 9:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "render",
    value: function render() {
      if (!this.state.t) return null;
      return _react.default.createElement(_context3.ChatContext.Provider, {
        value: this.getContext()
      }, _react.default.createElement(_context3.TranslationContext.Provider, {
        value: {
          t: this.state.t,
          tDateTimeParser: this.state.tDateTimeParser
        }
      }, this.props.children));
    }
  }]);
  return Chat;
}(_react.PureComponent);

exports.Chat = Chat;
(0, _defineProperty2.default)(Chat, "propTypes", {
  client: _propTypes.default.object.isRequired,
  theme: _propTypes.default.string
});
(0, _defineProperty2.default)(Chat, "defaultProps", {
  theme: 'messaging light'
});