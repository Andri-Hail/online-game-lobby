"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChannelListTeam = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _LoadingChannels = require("./LoadingChannels");

var _Avatar = require("./Avatar");

var _ChatDown = require("./ChatDown");

var _context = require("../context");

var _strChat__iconChevronDown = _interopRequireDefault(require("../assets/str-chat__icon-chevron-down.svg"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ChannelListTeam = function (_PureComponent) {
  (0, _inherits2.default)(ChannelListTeam, _PureComponent);

  var _super = _createSuper(ChannelListTeam);

  function ChannelListTeam() {
    (0, _classCallCheck2.default)(this, ChannelListTeam);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ChannelListTeam, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          showSidebar = _this$props.showSidebar,
          LoadingErrorIndicator = _this$props.LoadingErrorIndicator,
          LoadingIndicator = _this$props.LoadingIndicator;

      if (this.props.error) {
        return _react.default.createElement(LoadingErrorIndicator, {
          type: "Connection Error"
        });
      } else if (this.props.loading) {
        return _react.default.createElement(LoadingIndicator, null);
      } else {
        return _react.default.createElement("div", {
          className: "str-chat__channel-list-team"
        }, showSidebar && _react.default.createElement("div", {
          className: "str-chat__channel-list-team__sidebar"
        }, _react.default.createElement("div", {
          className: "str-chat__channel-list-team__sidebar--top"
        }, _react.default.createElement(_Avatar.Avatar, {
          image: this.props.sidebarImage,
          size: 50
        }))), _react.default.createElement("div", {
          className: "str-chat__channel-list-team__main"
        }, _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header"
        }, _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header--left"
        }, _react.default.createElement(_Avatar.Avatar, {
          source: this.props.client.user.image,
          name: this.props.client.user.name || this.props.client.user.id,
          size: 40
        })), _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header--middle"
        }, _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header--title"
        }, this.props.client.user.name || this.props.client.user.id), _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header--status ".concat(this.props.client.user.status)
        }, this.props.client.user.status)), _react.default.createElement("div", {
          className: "str-chat__channel-list-team__header--right"
        }, _react.default.createElement("button", {
          className: "str-chat__channel-list-team__header--button"
        }, _react.default.createElement("img", {
          src: _strChat__iconChevronDown.default
        })))), this.props.children));
      }
    }
  }]);
  return ChannelListTeam;
}(_react.PureComponent);

exports.ChannelListTeam = ChannelListTeam;
(0, _defineProperty2.default)(ChannelListTeam, "propTypes", {
  loading: _propTypes.default.bool,
  error: _propTypes.default.bool,
  client: _propTypes.default.object,
  showSidebar: _propTypes.default.bool,
  sidebarImage: _propTypes.default.string,
  LoadingIndicator: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  LoadingErrorIndicator: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func])
});
(0, _defineProperty2.default)(ChannelListTeam, "defaultProps", {
  error: false,
  LoadingIndicator: _LoadingChannels.LoadingChannels,
  LoadingErrorIndicator: _ChatDown.ChatDown
});
exports.ChannelListTeam = ChannelListTeam = (0, _context.withChatContext)(ChannelListTeam);