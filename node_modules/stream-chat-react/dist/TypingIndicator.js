"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypingIndicator = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Avatar = require("./Avatar");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TypingIndicator = function (_React$PureComponent) {
  (0, _inherits2.default)(TypingIndicator, _React$PureComponent);

  var _super = _createSuper(TypingIndicator);

  function TypingIndicator() {
    (0, _classCallCheck2.default)(this, TypingIndicator);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(TypingIndicator, [{
    key: "render",
    value: function render() {
      var _this = this;

      var typing = Object.values(this.props.typing);
      var show;

      if (typing.length === 0 || typing.length === 1 && typing[0].user.id === this.props.client.user.id) {
        show = false;
      } else {
        show = true;
      }

      return _react.default.createElement("div", {
        className: "str-chat__typing-indicator ".concat(show ? 'str-chat__typing-indicator--typing' : '')
      }, _react.default.createElement("div", {
        className: "str-chat__typing-indicator__avatars"
      }, typing.filter(function (_ref) {
        var user = _ref.user;
        return user.id !== _this.props.client.user.id;
      }).map(function (_ref2) {
        var user = _ref2.user;
        return _react.default.createElement(_Avatar.Avatar, {
          image: user.image,
          size: 32,
          name: user.name || user.id,
          key: user.id
        });
      })), _react.default.createElement("div", {
        className: "str-chat__typing-indicator__dots"
      }, _react.default.createElement("span", {
        className: "str-chat__typing-indicator__dot"
      }), _react.default.createElement("span", {
        className: "str-chat__typing-indicator__dot"
      }), _react.default.createElement("span", {
        className: "str-chat__typing-indicator__dot"
      })));
    }
  }]);
  return TypingIndicator;
}(_react.default.PureComponent);

exports.TypingIndicator = TypingIndicator;
(0, _defineProperty2.default)(TypingIndicator, "propTypes", {
  client: _propTypes.default.object,
  typing: _propTypes.default.object
});