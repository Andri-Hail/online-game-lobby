"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.List = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _listener = _interopRequireWildcard(require("./listener"));

var _Item = _interopRequireDefault(require("./Item"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var List = function (_React$Component) {
  (0, _inherits2.default)(List, _React$Component);

  var _super = _createSuper(List);

  function List() {
    var _this;

    (0, _classCallCheck2.default)(this, List);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      selectedItem: null
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cachedValues", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onPressEnter", function (e) {
      if (e && e.preventDefault) {
        e.preventDefault();
      }

      var values = _this.props.values;

      _this.modifyText(values[_this.getPositionInList()]);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getPositionInList", function () {
      var values = _this.props.values;
      var selectedItem = _this.state.selectedItem;
      if (!selectedItem) return 0;
      return values.findIndex(function (a) {
        return _this.getId(a) === _this.getId(selectedItem);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getId", function (item) {
      var textToReplace = _this.props.getTextToReplace(item);

      if (textToReplace.key) {
        return textToReplace.key;
      }

      if (typeof item === 'string' || !item.key) {
        return textToReplace.text;
      }

      return item.key;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "listeners", []);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "itemsRef", {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "modifyText", function (value) {
      if (!value) return;
      var _this$props = _this.props,
          onSelect = _this$props.onSelect,
          getTextToReplace = _this$props.getTextToReplace,
          getSelectedItem = _this$props.getSelectedItem;
      onSelect(getTextToReplace(value));

      if (getSelectedItem) {
        getSelectedItem(value);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectItem", function (item) {
      var keyboard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _this.setState({
        selectedItem: item
      }, function () {
        if (keyboard) {
          _this.props.dropdownScroll(_this.itemsRef[_this.getId(item)]);
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scroll", function (e) {
      if (e && e.preventDefault) {
        e.preventDefault();
      }

      var values = _this.props.values;
      var code = e.keyCode || e.which;

      var oldPosition = _this.getPositionInList();

      var newPosition;

      switch (code) {
        case _listener.KEY_CODES.DOWN:
          newPosition = oldPosition + 1;
          break;

        case _listener.KEY_CODES.UP:
          newPosition = oldPosition - 1;
          break;

        default:
          newPosition = oldPosition;
          break;
      }

      newPosition = (newPosition % values.length + values.length) % values.length;

      _this.selectItem(values[newPosition], [_listener.KEY_CODES.DOWN, _listener.KEY_CODES.UP].includes(code));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isSelected", function (item) {
      var selectedItem = _this.state.selectedItem;
      if (!selectedItem) return false;
      return _this.getId(selectedItem) === _this.getId(item);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderHeader", function (value) {
      if (value[0] === '/') {
        return "Commands matching <strong>".concat(value.replace('/', ''), "</strong>");
      }

      if (value[0] === ':') {
        return "Emoji matching <strong>".concat(value.replace(':', ''), "</strong>");
      }

      if (value[0] === '@') {
        return "Searching for people";
      }
    });
    return _this;
  }

  (0, _createClass2.default)(List, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.listeners.push(_listener.default.add([_listener.KEY_CODES.DOWN, _listener.KEY_CODES.UP], this.scroll), _listener.default.add([_listener.KEY_CODES.ENTER, _listener.KEY_CODES.TAB], this.onPressEnter));
      var values = this.props.values;
      if (values && values[0]) this.selectItem(values[0]);
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(_ref) {
      var _this2 = this;

      var values = _ref.values;
      var newValues = values.map(function (val) {
        return _this2.getId(val);
      }).join('');

      if (this.cachedValues !== newValues && values && values[0]) {
        this.selectItem(values[0]);
        this.cachedValues = newValues;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var listener;

      while (this.listeners.length) {
        listener = this.listeners.pop();

        _listener.default.remove(listener);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props2 = this.props,
          values = _this$props2.values,
          component = _this$props2.component,
          style = _this$props2.style,
          itemClassName = _this$props2.itemClassName,
          className = _this$props2.className,
          itemStyle = _this$props2.itemStyle;
      return _react.default.createElement("ul", {
        className: "rta__list ".concat(className || ''),
        style: style
      }, _react.default.createElement("li", {
        className: "rta__list-header",
        dangerouslySetInnerHTML: {
          __html: this.renderHeader(this.props.value)
        }
      }), values.map(function (item) {
        return _react.default.createElement(_Item.default, {
          key: _this3.getId(item),
          innerRef: function innerRef(ref) {
            _this3.itemsRef[_this3.getId(item)] = ref;
          },
          selected: _this3.isSelected(item),
          item: item,
          className: itemClassName,
          style: itemStyle,
          onClickHandler: _this3.onPressEnter,
          onSelectHandler: _this3.selectItem,
          component: component
        });
      }));
    }
  }]);
  return List;
}(_react.default.Component);

exports.List = List;
var _default = List;
exports.default = _default;