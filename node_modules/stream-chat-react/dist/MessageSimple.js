"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageSimple = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Attachment = require("./Attachment");

var _MessageActionsBox = require("./MessageActionsBox");

var _ReactionsList = require("./ReactionsList");

var _Avatar = require("./Avatar");

var _Tooltip = require("./Tooltip");

var _LoadingIndicator = require("./LoadingIndicator");

var _Gallery = require("./Gallery");

var _ReactionSelector = require("./ReactionSelector");

var _MessageRepliesCountButton = require("./MessageRepliesCountButton");

var _Modal = require("./Modal");

var _MessageInput = require("./MessageInput");

var _EditMessageForm = require("./EditMessageForm");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("../utils");

var _context = require("../context");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var MessageSimple = function (_PureComponent) {
  (0, _inherits2.default)(MessageSimple, _PureComponent);

  var _super = _createSuper(MessageSimple);

  function MessageSimple() {
    var _this;

    (0, _classCallCheck2.default)(this, MessageSimple);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      isFocused: false,
      actionsBoxOpen: false,
      showDetailedReactions: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "messageActionsRef", _react.default.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "reactionSelectorRef", _react.default.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_onClickOptionsAction", function () {
      _this.setState({
        actionsBoxOpen: true
      }, function () {
        return document.addEventListener('click', _this.hideOptions, false);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_hideOptions", function () {
      _this.setState({
        actionsBoxOpen: false
      });

      document.removeEventListener('click', _this.hideOptions, false);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_clickReactionList", function () {
      _this.setState(function () {
        return {
          showDetailedReactions: true
        };
      }, function () {
        document.addEventListener('click', _this._closeDetailedReactions);
        document.addEventListener('touchend', _this._closeDetailedReactions);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_closeDetailedReactions", function (e) {
      if (!_this.reactionSelectorRef.current.reactionSelector.current.contains(e.target)) {
        _this.setState(function () {
          return {
            showDetailedReactions: false
          };
        }, function () {
          document.removeEventListener('click', _this._closeDetailedReactions);
          document.removeEventListener('touchend', _this._closeDetailedReactions);
        });
      } else {
        return {};
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "formatArray", function (arr) {
      var t = _this.props.t;
      var outStr = '';
      var slicedArr = arr.filter(function (item) {
        return item.id !== _this.props.client.user.id;
      }).map(function (item) {
        return item.name || item.id;
      }).slice(0, 5);
      var restLength = arr.length - slicedArr.length;

      if (slicedArr.length === 1) {
        outStr = slicedArr[0] + ' ';
      } else if (slicedArr.length === 2) {
        outStr = t('{{ firstUser }} and {{ secondUser }}', {
          firstUser: slicedArr[0],
          secondUser: slicedArr[1]
        });
      } else if (slicedArr.length > 2) {
        outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {
          commaSeparatedUsers: slicedArr.join(', '),
          moreCount: restLength
        });
      }

      return outStr;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderStatus", function () {
      var _this$props = _this.props,
          readBy = _this$props.readBy,
          client = _this$props.client,
          message = _this$props.message,
          threadList = _this$props.threadList,
          lastReceivedId = _this$props.lastReceivedId,
          t = _this$props.t;

      if (!_this.isMine() || message.type === 'error') {
        return null;
      }

      var justReadByMe = readBy.length === 1 && readBy[0].id === client.user.id;

      if (message.status === 'sending') {
        return _react.default.createElement("span", {
          className: "str-chat__message-simple-status"
        }, _react.default.createElement(_Tooltip.Tooltip, null, t('Sending...')), _react.default.createElement(_LoadingIndicator.LoadingIndicator, null));
      } else if (readBy.length !== 0 && !threadList && !justReadByMe) {
        var lastReadUser = readBy.filter(function (item) {
          return item.id !== client.user.id;
        })[0];
        return _react.default.createElement("span", {
          className: "str-chat__message-simple-status"
        }, _react.default.createElement(_Tooltip.Tooltip, null, _this.formatArray(readBy)), _react.default.createElement(_Avatar.Avatar, {
          name: lastReadUser.name || lastReadUser.id,
          image: lastReadUser.image,
          size: 15
        }), readBy.length > 2 && _react.default.createElement("span", {
          className: "str-chat__message-simple-status-number"
        }, readBy.length - 1));
      } else if (message.status === 'received' && message.id === lastReceivedId && !threadList) {
        return _react.default.createElement("span", {
          className: "str-chat__message-simple-status"
        }, _react.default.createElement(_Tooltip.Tooltip, null, t('Delivered')), _react.default.createElement("svg", {
          width: "16",
          height: "16",
          xmlns: "http://www.w3.org/2000/svg"
        }, _react.default.createElement("path", {
          d: "M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm3.72 6.633a.955.955 0 1 0-1.352-1.352L6.986 8.663 5.633 7.31A.956.956 0 1 0 4.28 8.663l2.029 2.028a.956.956 0 0 0 1.353 0l4.058-4.058z",
          fill: "#006CFF",
          fillRule: "evenodd"
        })));
      } else {
        return null;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderMessageActions", function () {
      var _this$props2 = _this.props,
          Message = _this$props2.Message,
          getMessageActions = _this$props2.getMessageActions,
          messageListRect = _this$props2.messageListRect,
          handleFlag = _this$props2.handleFlag,
          handleMute = _this$props2.handleMute,
          handleEdit = _this$props2.handleEdit,
          handleDelete = _this$props2.handleDelete;
      var messageActions = getMessageActions();

      if (messageActions.length === 0) {
        return;
      }

      return _react.default.createElement("div", {
        onClick: _this._onClickOptionsAction,
        className: "str-chat__message-simple__actions__action str-chat__message-simple__actions__action--options"
      }, _react.default.createElement(_MessageActionsBox.MessageActionsBox, {
        Message: Message,
        getMessageActions: getMessageActions,
        open: _this.state.actionsBoxOpen,
        messageListRect: messageListRect,
        handleFlag: handleFlag,
        handleMute: handleMute,
        handleEdit: handleEdit,
        handleDelete: handleDelete,
        mine: _this.isMine()
      }), _react.default.createElement("svg", {
        width: "11",
        height: "4",
        viewBox: "0 0 11 4",
        xmlns: "http://www.w3.org/2000/svg"
      }, _react.default.createElement("path", {
        d: "M1.5 3a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z",
        fillRule: "nonzero"
      })));
    });
    return _this;
  }

  (0, _createClass2.default)(MessageSimple, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!this.props.message.deleted_at) {
        document.removeEventListener('click', this._closeDetailedReactions);
        document.removeEventListener('touchend', this._closeDetailedReactions);
      }
    }
  }, {
    key: "isMine",
    value: function isMine() {
      return this.props.isMyMessage(this.props.message);
    }
  }, {
    key: "renderOptions",
    value: function renderOptions() {
      var _this$props3 = this.props,
          message = _this$props3.message,
          initialMessage = _this$props3.initialMessage,
          channelConfig = _this$props3.channelConfig,
          threadList = _this$props3.threadList,
          handleOpenThread = _this$props3.handleOpenThread;

      if (message.type === 'error' || message.type === 'system' || message.type === 'ephemeral' || message.status === 'failed' || message.status === 'sending' || initialMessage) {
        return;
      }

      if (this.isMine()) {
        return _react.default.createElement("div", {
          className: "str-chat__message-simple__actions"
        }, this.renderMessageActions(), !threadList && channelConfig && channelConfig.replies && _react.default.createElement("div", {
          onClick: handleOpenThread,
          className: "str-chat__message-simple__actions__action str-chat__message-simple__actions__action--thread"
        }, _react.default.createElement("svg", {
          width: "14",
          height: "10",
          xmlns: "http://www.w3.org/2000/svg"
        }, _react.default.createElement("path", {
          d: "M8.516 3c4.78 0 4.972 6.5 4.972 6.5-1.6-2.906-2.847-3.184-4.972-3.184v2.872L3.772 4.994 8.516.5V3zM.484 5l4.5-4.237v1.78L2.416 5l2.568 2.125v1.828L.484 5z",
          fillRule: "evenodd"
        }))), channelConfig && channelConfig.reactions && _react.default.createElement("div", {
          className: "str-chat__message-simple__actions__action str-chat__message-simple__actions__action--reactions",
          onClick: this._clickReactionList
        }, _react.default.createElement("svg", {
          width: "16",
          height: "14",
          viewBox: "0 0 16 14",
          xmlns: "http://www.w3.org/2000/svg"
        }, _react.default.createElement("path", {
          d: "M11.108 8.05a.496.496 0 0 1 .212.667C10.581 10.147 8.886 11 7 11c-1.933 0-3.673-.882-4.33-2.302a.497.497 0 0 1 .9-.417C4.068 9.357 5.446 10 7 10c1.519 0 2.869-.633 3.44-1.738a.495.495 0 0 1 .668-.212zm.792-1.826a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.298 0-.431.168-.54.307A.534.534 0 0 1 9.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zm-7 0a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.299 0-.432.168-.54.307A.533.533 0 0 1 2.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zM7 0a7 7 0 1 1 0 14A7 7 0 0 1 7 0zm4.243 11.243A5.96 5.96 0 0 0 13 7a5.96 5.96 0 0 0-1.757-4.243A5.96 5.96 0 0 0 7 1a5.96 5.96 0 0 0-4.243 1.757A5.96 5.96 0 0 0 1 7a5.96 5.96 0 0 0 1.757 4.243A5.96 5.96 0 0 0 7 13a5.96 5.96 0 0 0 4.243-1.757z",
          fillRule: "evenodd"
        }))));
      } else {
        return _react.default.createElement("div", {
          className: "str-chat__message-simple__actions"
        }, channelConfig && channelConfig.reactions && _react.default.createElement("div", {
          className: "str-chat__message-simple__actions__action str-chat__message-simple__actions__action--reactions",
          onClick: this._clickReactionList
        }, _react.default.createElement("svg", {
          width: "14",
          height: "14",
          xmlns: "http://www.w3.org/2000/svg"
        }, _react.default.createElement("path", {
          d: "M11.108 8.05a.496.496 0 0 1 .212.667C10.581 10.147 8.886 11 7 11c-1.933 0-3.673-.882-4.33-2.302a.497.497 0 0 1 .9-.417C4.068 9.357 5.446 10 7 10c1.519 0 2.869-.633 3.44-1.738a.495.495 0 0 1 .668-.212zm.792-1.826a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.298 0-.431.168-.54.307A.534.534 0 0 1 9.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zm-7 0a.477.477 0 0 1-.119.692.541.541 0 0 1-.31.084.534.534 0 0 1-.428-.194c-.106-.138-.238-.306-.539-.306-.299 0-.432.168-.54.307A.533.533 0 0 1 2.538 7a.544.544 0 0 1-.31-.084.463.463 0 0 1-.117-.694c.33-.423.742-.722 1.394-.722.653 0 1.068.3 1.396.724zM7 0a7 7 0 1 1 0 14A7 7 0 0 1 7 0zm4.243 11.243A5.96 5.96 0 0 0 13 7a5.96 5.96 0 0 0-1.757-4.243A5.96 5.96 0 0 0 7 1a5.96 5.96 0 0 0-4.243 1.757A5.96 5.96 0 0 0 1 7a5.96 5.96 0 0 0 1.757 4.243A5.96 5.96 0 0 0 7 13a5.96 5.96 0 0 0 4.243-1.757z",
          fillRule: "evenodd"
        }))), !threadList && channelConfig && channelConfig.replies && _react.default.createElement("div", {
          onClick: handleOpenThread,
          className: "str-chat__message-simple__actions__action str-chat__message-simple__actions__action--thread"
        }, _react.default.createElement("svg", {
          width: "14",
          height: "10",
          xmlns: "http://www.w3.org/2000/svg"
        }, _react.default.createElement("path", {
          d: "M8.516 3c4.78 0 4.972 6.5 4.972 6.5-1.6-2.906-2.847-3.184-4.972-3.184v2.872L3.772 4.994 8.516.5V3zM.484 5l4.5-4.237v1.78L2.416 5l2.568 2.125v1.828L.484 5z",
          fillRule: "evenodd"
        }))), this.renderMessageActions());
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          message = _this$props4.message,
          Attachment = _this$props4.Attachment,
          editing = _this$props4.editing,
          clearEditingState = _this$props4.clearEditingState,
          handleRetry = _this$props4.handleRetry,
          updateMessage = _this$props4.updateMessage,
          handleReaction = _this$props4.handleReaction,
          actionsEnabled = _this$props4.actionsEnabled,
          messageListRect = _this$props4.messageListRect,
          handleAction = _this$props4.handleAction,
          onMentionsHoverMessage = _this$props4.onMentionsHoverMessage,
          onMentionsClickMessage = _this$props4.onMentionsClickMessage,
          unsafeHTML = _this$props4.unsafeHTML,
          threadList = _this$props4.threadList,
          handleOpenThread = _this$props4.handleOpenThread,
          t = _this$props4.t,
          tDateTimeParser = _this$props4.tDateTimeParser;
      var when = tDateTimeParser(message.created_at).calendar();
      var messageClasses = this.isMine() ? 'str-chat__message str-chat__message--me str-chat__message-simple str-chat__message-simple--me' : 'str-chat__message str-chat__message-simple';
      var hasAttachment = Boolean(message && message.attachments && message.attachments.length);
      var images = hasAttachment && message.attachments.filter(function (item) {
        return item.type === 'image';
      });
      var hasReactions = Boolean(message.latest_reactions && message.latest_reactions.length);

      if (message.type === 'message.read' || message.type === 'message.date') {
        return null;
      }

      if (message.deleted_at) {
        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
          key: message.id,
          className: "".concat(messageClasses, " str-chat__message--deleted ").concat(message.type, " ")
        }, _react.default.createElement("div", {
          className: "str-chat__message--deleted-inner"
        }, t('This message was deleted...'))));
      }

      return _react.default.createElement(_react.default.Fragment, null, editing && _react.default.createElement(_Modal.Modal, {
        open: editing,
        onClose: clearEditingState
      }, _react.default.createElement(_MessageInput.MessageInput, (0, _extends2.default)({
        Input: _EditMessageForm.EditMessageForm,
        message: message,
        clearEditingState: clearEditingState,
        updateMessage: updateMessage
      }, this.props.additionalMessageInputProps))), _react.default.createElement("div", {
        key: message.id,
        className: "\n\t\t\t\t\t\t".concat(messageClasses, "\n\t\t\t\t\t\tstr-chat__message--").concat(message.type, "\n\t\t\t\t\t\tstr-chat__message--").concat(message.status, "\n\t\t\t\t\t\t").concat(message.text ? 'str-chat__message--has-text' : 'has-no-text', "\n\t\t\t\t\t\t").concat(hasAttachment ? 'str-chat__message--has-attachment' : '', "\n\t\t\t\t\t\t").concat(hasReactions ? 'str-chat__message--with-reactions' : '', "\n\t\t\t\t\t").trim(),
        onMouseLeave: this._hideOptions,
        ref: this.messageRef
      }, this.renderStatus(), _react.default.createElement(_Avatar.Avatar, {
        image: message.user.image,
        name: message.user.name || message.user.id
      }), _react.default.createElement("div", {
        className: "str-chat__message-inner",
        onClick: message.status === 'failed' ? handleRetry.bind(this, message) : null
      }, !message.text && _react.default.createElement(_react.default.Fragment, null, this.renderOptions(), hasReactions && !this.state.showDetailedReactions && _react.default.createElement(_ReactionsList.ReactionsList, {
        reactions: message.latest_reactions,
        reaction_counts: message.reaction_counts,
        onClick: this._clickReactionList,
        reverse: true
      }), this.state.showDetailedReactions && _react.default.createElement(_ReactionSelector.ReactionSelector, {
        handleReaction: handleReaction,
        detailedView: true,
        reaction_counts: message.reaction_counts,
        latest_reactions: message.latest_reactions,
        messageList: messageListRect,
        ref: this.reactionSelectorRef
      })), _react.default.createElement("div", {
        className: "str-chat__message-attachment-container"
      }, hasAttachment && message.attachments.map(function (attachment, index) {
        if (attachment.type === 'image' && images.length > 1) return null;
        return _react.default.createElement(Attachment, {
          key: "".concat(message.id, "-").concat(index),
          attachment: attachment,
          actionHandler: handleAction
        });
      })), images.length > 1 && _react.default.createElement(_Gallery.Gallery, {
        images: images
      }), message.text && _react.default.createElement("div", {
        className: "str-chat__message-text"
      }, _react.default.createElement("div", {
        className: "\n\t\t\t\t\t\t\t\t\tstr-chat__message-text-inner str-chat__message-simple-text-inner\n\t\t\t\t\t\t\t\t\t".concat(this.state.isFocused ? 'str-chat__message-text-inner--focused' : '', "\n\t\t\t\t\t\t\t\t\t").concat(hasAttachment ? 'str-chat__message-text-inner--has-attachment' : '', "\n\t\t\t\t\t\t\t\t\t").concat((0, _utils.isOnlyEmojis)(message.text) ? 'str-chat__message-simple-text-inner--is-emoji' : '', "\n                ").trim(),
        onMouseOver: onMentionsHoverMessage,
        onClick: onMentionsClickMessage
      }, message.type === 'error' && _react.default.createElement("div", {
        className: "str-chat__simple-message--error-message"
      }, t('Error · Unsent')), message.status === 'failed' && _react.default.createElement("div", {
        className: "str-chat__simple-message--error-message"
      }, t('Message Failed · Click to try again')), unsafeHTML ? _react.default.createElement("div", {
        dangerouslySetInnerHTML: {
          __html: message.html
        }
      }) : (0, _utils.renderText)(message), hasReactions && !this.state.showDetailedReactions && _react.default.createElement(_ReactionsList.ReactionsList, {
        reactions: message.latest_reactions,
        reaction_counts: message.reaction_counts,
        onClick: this._clickReactionList,
        reverse: true
      }), this.state.showDetailedReactions && _react.default.createElement(_ReactionSelector.ReactionSelector, {
        mine: this.isMine(),
        handleReaction: handleReaction,
        actionsEnabled: actionsEnabled,
        detailedView: true,
        reaction_counts: message.reaction_counts,
        latest_reactions: message.latest_reactions,
        messageList: messageListRect,
        ref: this.reactionSelectorRef
      })), message.text && this.renderOptions()), !threadList && message.reply_count !== 0 && _react.default.createElement("div", {
        className: "str-chat__message-simple-reply-button"
      }, _react.default.createElement(_MessageRepliesCountButton.MessageRepliesCountButton, {
        onClick: handleOpenThread,
        reply_count: message.reply_count
      })), _react.default.createElement("div", {
        className: "str-chat__message-data str-chat__message-simple-data"
      }, !this.isMine() ? _react.default.createElement("span", {
        className: "str-chat__message-simple-name"
      }, message.user.name || message.user.id) : null, _react.default.createElement("span", {
        className: "str-chat__message-simple-timestamp"
      }, when)))));
    }
  }]);
  return MessageSimple;
}(_react.PureComponent);

exports.MessageSimple = MessageSimple;
(0, _defineProperty2.default)(MessageSimple, "propTypes", {
  message: _propTypes.default.object,
  Attachment: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  Message: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func, _propTypes.default.object]).isRequired,
  unsafeHTML: _propTypes.default.bool,
  client: _propTypes.default.object,
  initialMessage: _propTypes.default.bool,
  channelConfig: _propTypes.default.object,
  threadList: _propTypes.default.bool,
  handleOpenThread: _propTypes.default.func,
  editing: _propTypes.default.bool,
  clearEditingState: _propTypes.default.func,
  isMyMessage: _propTypes.default.func,
  getMessageActions: _propTypes.default.func,
  updateMessage: _propTypes.default.func,
  handleRetry: _propTypes.default.func,
  handleReaction: _propTypes.default.func,
  actionsEnabled: _propTypes.default.bool,
  messageListRect: _propTypes.default.object,
  handleAction: _propTypes.default.func,
  onMentionsHoverMessage: _propTypes.default.func,
  onMentionsClickMessage: _propTypes.default.func,
  additionalMessageInputProps: _propTypes.default.object
});
(0, _defineProperty2.default)(MessageSimple, "defaultProps", {
  Attachment: _Attachment.Attachment
});
exports.MessageSimple = MessageSimple = (0, _context.withTranslationContext)(MessageSimple);