"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChannelHeader = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Avatar = require("./Avatar");

var _context = require("../context");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ChannelHeader = function (_PureComponent) {
  (0, _inherits2.default)(ChannelHeader, _PureComponent);

  var _super = _createSuper(ChannelHeader);

  function ChannelHeader() {
    (0, _classCallCheck2.default)(this, ChannelHeader);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ChannelHeader, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          t = _this$props.t,
          channel = _this$props.channel,
          title = _this$props.title,
          live = _this$props.live,
          watcher_count = _this$props.watcher_count;
      return _react.default.createElement("div", {
        className: "str-chat__header-livestream"
      }, _react.default.createElement("div", {
        className: "str-chat__header-hamburger",
        onClick: this.props.openMobileNav
      }, _react.default.createElement("span", {
        className: "str-chat__header-hamburger--line"
      }), _react.default.createElement("span", {
        className: "str-chat__header-hamburger--line"
      }), _react.default.createElement("span", {
        className: "str-chat__header-hamburger--line"
      })), channel.data.image && _react.default.createElement(_Avatar.Avatar, {
        image: channel.data.image,
        shape: "rounded",
        size: channel.type === 'commerce' ? 60 : 40
      }), _react.default.createElement("div", {
        className: "str-chat__header-livestream-left"
      }, _react.default.createElement("p", {
        className: "str-chat__header-livestream-left--title"
      }, title || channel.data.name, ' ', live && _react.default.createElement("span", {
        className: "str-chat__header-livestream-left--livelabel"
      }, t('live'))), channel.data.subtitle && _react.default.createElement("p", {
        className: "str-chat__header-livestream-left--subtitle"
      }, channel.data.subtitle), _react.default.createElement("p", {
        className: "str-chat__header-livestream-left--members"
      }, !live && channel.data.member_count > 0 && _react.default.createElement(_react.default.Fragment, null, t('{{ memberCount }} members', {
        memberCount: channel.data.member_count
      }), ",", ' '), t('{{ watcherCount }} online', {
        watcherCount: watcher_count
      }))));
    }
  }]);
  return ChannelHeader;
}(_react.PureComponent);

exports.ChannelHeader = ChannelHeader;
(0, _defineProperty2.default)(ChannelHeader, "propTypes", {
  title: _propTypes.default.string,
  live: _propTypes.default.bool,
  channel: _propTypes.default.object.isRequired,
  watcher_count: _propTypes.default.number
});
exports.ChannelHeader = ChannelHeader = (0, _context.withChatContext)(ChannelHeader);
exports.ChannelHeader = ChannelHeader = (0, _context.withChannelContext)((0, _context.withTranslationContext)(ChannelHeader));